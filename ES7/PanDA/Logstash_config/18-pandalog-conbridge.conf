filter {
    if ([@metadata][beat] == "pandalogs")
    {
        if ([fields][type] == "conbridge")
        {
            fingerprint {
                source => "message"
                target => "uid"
            }
            mutate {
                rename => {"message" => "garbage"}
            }
            ruby {
                code => '
				event.set("garbage", event.get("garbage").split.join(" "))
				'
            }
            grok {
                patterns_dir => "/usr/share/logstash/patterns/"
                match => { "garbage" => "%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:logName}: %{WORD:logLevel} %{GREEDYDATA:message}" }
            }
            kv {
                source => "message"
                value_split => "="
            }
            ### For master or child id###
            ruby {
                code => '
				fieldArray  = event.get("message").split(" ")
				event.set(fieldArray[0], fieldArray[1])
				'
            }
            date {
                timezone => "Etc/UTC"
                match => ["timeEvent","ISO8601", "yyyy-MM-dd HH:mm:ss.SSS"]
                target => "@timestamp"
                #remove_field => ["timeEvent"]
            }
            if ("_grokparsefailure" not in [tags])
            {
                mutate {
                    remove_field => "garbage"
                }
            }
            ruby {
                code => "
				event.to_hash.each do |key,value|
				if value.instance_of? String
				if (value.match(/^(\d+[,.]\d+)/))
				value = value.gsub(',','.')
				event.set(key, value.to_f)
				end
				if (value.match(/^(\d)+$/))
				event.set(key, value.to_i)
				end
				end
				end
				"
            }
        }
    }
}
