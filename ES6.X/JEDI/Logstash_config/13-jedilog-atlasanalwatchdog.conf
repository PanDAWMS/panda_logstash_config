filter {
	if ([@metadata][beat]=="jedilogs")
	{
		if ([fields][type]=="atlasanalwatchdog")
		{
			mutate {
				rename => {"message"=>"garbage"}
			}
			ruby {
				code => '
				event.set("garbage", event.get("garbage").split.join(" "))
				'
			}
			grok {
				patterns_dir => "/usr/share/logstash/patterns/"
				match => { "garbage" => "%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:logName}: %{WORD:logLevel} %{GREEDYDATA:message}" }
			}
			if ([message]=~"jediTaskID") {
				grok {
					patterns_dir => "/usr/share/logstash/patterns/"
					match => { "message" => "<jediTaskID=%{NUMBER:jediTaskID}> %{GREEDYDATA:message}" }
					overwrite => ["message"]
				}
			} else {
					grok {
						patterns_dir => "/usr/share/logstash/patterns/"
						match => { "message" => ["<%{TIMESTAMP_AtlasProdJobThrottler}> %{GREEDYDATA:message}","%{GREEDYDATA:message}"] }
						overwrite => ["message"]
					}
			}
				date {
					timezone => "Etc/UTC"
					match => ["timeEvent","ISO8601", "yyyy-MM-dd HH:mm:ss.SSS"]
					target => "@timestamp"
					#remove_field => ["timeEvent"]
				}
				# removing #ATM tag from message field + whitespace. Adding ATM tag to an array of tags
	      if ([message]=~ /#ATM/) {
	          mutate {
	                gsub => ["message","#ATM ",""]
	                add_tag => ["ATM"]
	          }
	      }
				if ("_grokparsefailure" not in [tags])
				{
					mutate {
						remove_field => "garbage"
					}
				}
				ruby {
					code => "
					event.to_hash.each do |key,value|
					if value.instance_of? String
					if (value.match(/^(\d+[,.]\d+)/))
					value = value.gsub(',','.')
					event.set(key, value.to_f)
					end
					if (value.match(/^(\d)+$/))
					event.set(key, value.to_i)
					end
					end
					end
					"
				}
			}
		}
	}
