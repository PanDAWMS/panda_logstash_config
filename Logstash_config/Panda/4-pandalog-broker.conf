filter {
	if (%{[@metadata][beat]}=="pandalogs")
	{
	if ([type]=="brokerlog")
	{
		mutate {
			rename => {"message"=>"garbage"}
		}
		ruby {
		code => "
			event['garbage']  = event['garbage'].split.join(' ')"
		}
		if ("hospital queues" in [garbage])
		{
			grok {
				patterns_dir => "/opt/logstash/patterns/"
				match => { "garbage" => "%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:logName}: %{WORD:logLevel} %{GREEDYDATA:message}" }
			}
			mutate {
				remove_field => ['garbage','tags']
			}
			mutate {
				add_tag => ['hospital_queues']
			}
		}
		else
		{
			grok {
				patterns_dir => "/opt/logstash/patterns/"
				match => { "garbage" => "%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:logName}: %{WORD:logLevel} %{NOTSPACE:timeid} %{GREEDYDATA:message}" }
			}
			mutate {
				remove_field => ['garbage']
			}
			mutate {
				remove_field => ["tags"]
			}
			mutate {
				add_tag => ['not_hospital_queues']
			}
		}
	}
}
}
