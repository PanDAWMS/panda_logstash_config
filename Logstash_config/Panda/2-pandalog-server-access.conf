filter {
	if ([@metadata][beat]=="pandalogs")
	{
	if ([type]=="serveraccess")
	{
		mutate {

			rename => {"message"=>"garbage"}
			gsub => ["garbage","[\\]",""
			,"garbage","[_]","-"]
		}

		grok {
			patterns_dir => "/opt/logstash/patterns/"
			match => { "garbage" => "%{COMMONLOG}" }
		}
		if ([Function_called] !~ "\*") 
		{
			ruby {
				code => "
					fieldArray = event['Function_called']
					split_func = fieldArray.split('/')
					if (fieldArray =~ %r'schedconfig' or fieldArray =~ %r'pilot' or fieldArray =~%r'user')
					event['Short_function_called'] = split_func[-2]
					elsif (fieldArray =~ %r'\?')
					event['Short_function_called'] = split_func[-1].split('?').first
					else
					event['Short_function_called'] = split_func[-1]
					end
				"
			}
		}

#		ruby {
#				code => "
#					fieldArray = event['Size']
#					split_func = fieldArray.to_i
#					event['Size'] = split_func
#				"
#			}
		if ("_grokparsefailure" not in [tags])
		{
			mutate {
				convert =>  { "Size" => "integer" }
				remove_field => "garbage"
			}
		}
	}
}
}
