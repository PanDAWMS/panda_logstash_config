filter {
	if (%{[@metadata][beat]}=="jedilogs")
	{
	if ([type]=="jobgenerator")
	{
    mutate {
			rename => {"message"=>"garbage"}
		}
		ruby {
			code => "
			event['garbage']  = event['garbage'].split.join(' ')"
		}
    grok {
      patterns_dir => "/opt/logstash/patterns/"
      match => { "garbage" => %{TIMESTAMP_ISO8601:timeEvent} %{TYPE:nameLog}: %{WORD:logLevel} %{GREEDYDATA:message}}
    }
    if ([logLevel]=="INFO" and [logLevel]=="ERROR")
    {
      grok {
        patterns_dir => "/opt/logstash/patterns/"
        match => { "message" => %{BRACKETS:jtdt} %{GREEDYDATA:message}"}
				overwrite => [ "message" ]
			}
			kv {
				source => "jtdt"
				trim => "<>"
				trimkey => "<>"
				value_split => "="
				field_split => " "
			}
    }
    if ([logLevel]=="DEBUG")
    {
      grok {
        patterns_dir => "/opt/logstash/patterns/"
        match => { "message" => <%{TIMESTAMP_AtlasProdJobThrottler}> %{GREEDYDATA:message}}
				overwrite => [ "message" ]
			}
    }
		if ("_grokparsefailure" not in [tags])
		{
			mutate {
				remove_field => "garbage"
			}
		}
  }
}
}
