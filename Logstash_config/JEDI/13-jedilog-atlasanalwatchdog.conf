filter {
	if ([@metadata][beat]=="jedilogs")
	{
	if ([type]=="atlasanalwatchdog")
	{
    mutate {
      rename => {"message"=>"garbage"}
    }
    ruby {
      code => "
      event['garbage']  = event['garbage'].split.join(' ')"
    }
		grok {
			patterns_dir => "/opt/logstash/patterns/"
			match => { "garbage" => "%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:nameLog}: %{WORD:logLevel} %{GREEDYDATA:message}" }
		}
		if ([message]=~"jediTaskID")
		{
			grok {
				patterns_dir => "/opt/logstash/patterns/"
				match => { "message" => "<jediTaskID=%{NUMBER:jediTaskID}> %{GREEDYDATA:message}" }
				overwrite => ["message"]
			}
		} else {
			grok {
				patterns_dir => "/opt/logstash/patterns/"
				match => { "message" => "<%{TIMESTAMP_AtlasProdJobThrottler}> %{GREEDYDATA:message}" }
				overwrite => ["message"]
			}
		}
    if ("_grokparsefailure" not in [tags])
    {
      mutate {
        remove_field => "garbage"
      }
    }
  }
}
}
