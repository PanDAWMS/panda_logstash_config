filter {
	if ([@metadata][beat]=="jedilogs")
	{
		if ([type]=="atlasprodtaskbroker")
		{
			mutate {
				rename => {"message"=>"garbage"}
			}
			ruby {
				code => "
				event['garbage']  = event['garbage'].split.join(' ')"
			}
			grok {
				patterns_dir => "/opt/logstash/patterns/"
				match => { "garbage" => ["%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:nameLog}: %{WORD:logLevel} <jediTaskID=%{NUMBER:jediTaskID}> %{GREEDYDATA:message}","%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:nameLog}: %{WORD:logLevel } <%{TIMESTAMP_AtlasProdJobThrottler}> %{GREEDYDATA:message}","%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:nameLog}: %{WORD:logLevel} %{GREEDYDATA:message}"]
				}
			}
            kv {
                source => "message"
                value_split => "="
                field_split => " "
                trim => "()*"
                trimkey => "()*"
            }
            if ("_grokparsefailure" not in [tags])
            {
                mutate {
                   remove_field => "garbage"
                }
			}
			if ([RW] =~ '0<50')
			{
				mutate {
                	rename => {"RW"=>"RWString"}
				}
			}
			ruby {
				code => "
						event.to_hash.each do |key,value|
						if value.instance_of? String
							if (value.match(/^(\d+[,.]\d+)/))
								value = value.gsub(',','.')
								event[key] = value.to_f
							end
							if (value.match(/^(\d)+$/))
								event[key] = value.to_i
							end
						end
						end
                                "
			}
		}
	}
}