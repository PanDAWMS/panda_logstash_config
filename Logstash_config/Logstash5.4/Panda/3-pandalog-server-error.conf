filter {
	if ([@metadata][beat]=="pandalogs")
	{
		if ([type]=="servererror")
		{
			mutate {
				rename => {"message"=>"garbage"}
			}
			ruby {
			code => 
			"event['garbage']  = event['garbage'].split.join(' ')"
			}
			grok {
				patterns_dir => "/usr/share/logstash/patterns/"
				match => { "garbage" => "\[%{HTTPDERROR_DATE:timeEvent}\] \[%{WORD:logType}\] %{GREEDYDATA:message}" }
			}
			if ([message]=~ "server seems busy")
			{
			ruby {
				code => "
					fieldArray = event['message']
					splitString = fieldArray.scan(/\d+/).join(' ')
					split_num = splitString.split(' ').map(&:to_i)
					event['children'] = split_num[2].to_s + ' total children'
					event['idle_children'] = split_num[1]
					event['busy_children'] = split_num[2] - split_num[1]
				"
			}
			}
			if ("_grokparsefailure" not in [tags])
			{
				mutate {
					remove_field => "garbage"
				}
			}
        if ![logName]
        {
        mutate {
                add_field=> {"logName"=>"panda.log.Servererror"}
        }
        }
        if ![logLevel]
        {
        mutate {
                add_field=> {"logLevel"=>"INFO"}
        }
        }
		}
	}	
}
