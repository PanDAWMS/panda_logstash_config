filter {
	if ([@metadata][beat]=="jedilogs")
	{
		if ([type]=="atlasanalwatchdog")
		{
    		mutate {
    			rename => {"message"=>"garbage"}
    		}
    		ruby {
      		code => "
      			event['garbage']  = event['garbage'].split.join(' ')"
    		}
			grok {
				patterns_dir => "/opt/logstash/patterns/"
				match => { "garbage" => "%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:logName}: %{WORD:logLevel} %{GREEDYDATA:message}" }
			}
			if ([message]=~"jediTaskID")
			{
				grok {
					patterns_dir => "/opt/logstash/patterns/"
					match => { "message" => "<jediTaskID=%{NUMBER:jediTaskID}> %{GREEDYDATA:message}" }
					overwrite => ["message"]
				}
			} else {
				grok {
					patterns_dir => "/opt/logstash/patterns/"
					match => { "message" => ["<%{TIMESTAMP_AtlasProdJobThrottler}> %{GREEDYDATA:message}","%{GREEDYDATA:message}"] }
					overwrite => ["message"]
				}
			}
    		if ("_grokparsefailure" not in [tags])
    		{
      			mutate {
        			remove_field => "garbage"
      			}
    		}
			ruby {
				code => "
					event.to_hash.each do |key,value|
					if value.instance_of? String
					if (value.match(/^(\d+[,.]\d+)/))
					value = value.gsub(',','.')
					event[key] = value.to_f
					end
					if (value.match(/^(\d)+$/))
					event[key] = value.to_i
					end
					end
					end
				"
			}
  		}
	}
}
