filter {
	if ([@metadata][beat]=="jedilogs")
	{
		if ([type]=="watchdog")
		{
			mutate {
				rename => {"message"=>"garbage"}
			}
			ruby {
				code => "
				event['garbage']  = event['garbage'].split.join(' ')"
			}
			grok {
				patterns_dir => "/usr/share/logstash/patterns/"
				match => {
				"garbage" => ["%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:logName}: %{WORD:logLevel} <%{TIMESTAMP_AtlasProdJobThrottler}> %{GREEDYDATA:message}","%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:logName}: %{WORD:logLevel} %{GREEDYDATA:message}"]
				}
			}
			if ("_grokparsefailure" not in [tags])
			{
				mutate {
					remove_field => "garbage"
				}
			}
			ruby {
				code => "
					event.to_hash.each do |key,value|
					if value.instance_of? String
					if (value.match(/^(\d+[,.]\d+)/))
					value = value.gsub(',','.')
					event[key] = value.to_f
					end
					if (value.match(/^(\d)+$/))
					event[key] = value.to_i
					end
					end
					end
				"
			}
		}
	}
}