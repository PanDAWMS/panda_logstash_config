filter {
	if ([@metadata][beat]=="jedilogs")
	{
		if ([type]=="postprocessor")
		{
			mutate {
				rename => {"message"=>"garbage"}
			}
			ruby {
				code => '
								event.set("garbage", event.get("garbage").split.join(" "))
				'
			}
			grok {
				patterns_dir => "/usr/share/logstash/patterns/"
				match => { "garbage" => "%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:logName}: %{WORD:logLevel} %{GREEDYDATA:message}" }
			}
			if ([message]=~"jediTaskID" and [message]=~"set task.status")
			{
			grok {
				patterns_dir => "/usr/share/logstash/patterns/"
				match => { "message" => "<jediTaskID=%{NUMBER:jediTaskID}> set task.status=%{GREEDYDATA:taskStatus}" }
				#overwrite => ["message"]
			}
			} else {
				drop {}
			#grok {
				#patterns_dir => "/usr/share/logstash/patterns/"
				#match => { "message" => ["<%{TIMESTAMP_AtlasProdJobThrottler}> %{GREEDYDATA:message}","%{GREEDYDATA:message}"] }
				#overwrite => ["message"]
			#}
		}
			if ("_grokparsefailure" not in [tags])
			{
					mutate {
						remove_field => "garbage"
					}
			}
		}
	}
}
