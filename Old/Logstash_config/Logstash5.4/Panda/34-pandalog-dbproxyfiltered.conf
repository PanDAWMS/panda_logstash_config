filter {
        if ([@metadata][beat]=="pandalogs")
        {
        if ([type]=="dbproxyfiltered")
        {
                mutate {
                        rename => {"message"=>"garbage"}
                }
		ruby {
			code => '
				event.set("garbage", event.get("garbage").split.join(" "))
			'
		}
                grok {
                        patterns_dir => "/usr/share/logstash/patterns/"
                        match => { "garbage" => "%{TIMESTAMP_ISO8601:timeEvent} %{TYPE:logName}: %{WORD:logLevel} %{GREEDYDATA:message}" }
                }
                if ([logLevel]!="ERROR")
                {
                if [message]=~ /(\w+)=([^\s]+)/
                {
                kv {
                        source => "message"
                        trim_value => "<>"
                        trim_key => "<>"
                        value_split => "="
                }
                }
                }
                if ("_grokparsefailure" not in [tags])
                {
                        mutate {
                                remove_field => "garbage"
                        }
                }
        }
}
}